basePath: /v1
definitions:
  input.ActionGameRequest:
    properties:
      command_id:
        type: integer
      gameID:
        type: string
      user_id:
        type: string
    type: object
  input.CreateEncounterRequest:
    properties:
      encounted_user_id:
        type: string
      user_id:
        type: string
    type: object
  input.CreateGameRequest:
    properties:
      owner_id:
        type: string
    type: object
  input.CreateUser:
    properties:
      github_id:
        type: string
    type: object
  input.JoinGameRequest:
    properties:
      gameID:
        type: string
      user_id:
        type: string
    type: object
  input.ReadyGameRequest:
    properties:
      gameID:
        type: string
      user_id:
        type: string
    type: object
  output.ActionGameResponse:
    properties:
      skill:
        $ref: '#/definitions/types.Skill'
    type: object
  output.CreateEncounterResponse:
    properties:
      encounter_id:
        type: string
    type: object
  output.CreateGameResponse:
    properties:
      game_id:
        type: string
      game_server_token:
        type: string
    type: object
  output.CreateUserResponse:
    properties:
      message:
        description: ユーザの情報
        type: string
    type: object
  output.DeleteUserResponse:
    properties:
      message:
        type: string
    type: object
  output.JoinGameResponse:
    properties:
      game_id:
        type: string
      game_server_token:
        type: string
    type: object
  output.ListEncounterResponse:
    properties:
      created_at:
        type: string
      encounter_id:
        type: string
      encouted_user_id:
        type: string
      user_id:
        type: string
    type: object
  output.ReadUserResponse:
    properties:
      github_id:
        type: string
      user_id:
        description: ユーザの情報
        type: string
    type: object
  output.ReadyGameResponse:
    type: object
  types.Skill:
    properties:
      description:
        type: string
      required_bp:
        type: integer
      skill_id:
        description: BP制にする。毎ターン+2もらえる
        type: integer
      skill_name:
        type: string
      skill_type:
        $ref: '#/definitions/types.SkillType'
      skill_value:
        type: number
    type: object
  types.SkillType:
    enum:
    - attack
    - defence
    - buf
    - debuf
    - heal
    type: string
    x-enum-varnames:
    - TypeAttack
    - TypeDefence
    - TypeBuf
    - TypeDebuf
    - TypeHeal
host: localhost:8080
info:
  contact:
    email: oogiriminister@gamil.com
    name: murasame29
  description: This is a PDD-GitHub-Go-Backend API server
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: PDD-GitHub-Go-Backend API
  version: "0.1"
paths:
  /encounters:
    get:
      description: Get All Encounters
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - in: query
        name: pageID
        type: integer
      - in: query
        name: pageSize
        type: integer
      - in: query
        name: userID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            items:
              $ref: '#/definitions/output.ListEncounterResponse'
            type: array
        "400":
          description: error response
        "500":
          description: error response
      summary: Get All Encounters
      tags:
      - Encounter
    post:
      description: Create Encount entory
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create encounter request
        in: body
        name: CreateEncounterRequest
        required: true
        schema:
          $ref: '#/definitions/input.CreateEncounterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/output.CreateEncounterResponse'
        "400":
          description: error response
        "500":
          description: error response
      summary: Create Encounter
      tags:
      - Encounter
  /encounters/{encounter_id}:
    get:
      description: Get All Encounters
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: list encounter request
        in: path
        name: encounter_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/output.ListEncounterResponse'
        "400":
          description: error response
        "500":
          description: error response
      summary: Get All Encounters
      tags:
      - Encounter
  /game:
    post:
      description: Create Game
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create game request
        in: body
        name: CreateGameRequest
        required: true
        schema:
          $ref: '#/definitions/input.CreateGameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/output.CreateGameResponse'
        "400":
          description: error response
        "500":
          description: error response
      summary: Create Game
      tags:
      - Game
  /game/{game_id}:
    post:
      description: Join Game
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create game request
        in: body
        name: JoinGameRequest
        required: true
        schema:
          $ref: '#/definitions/input.JoinGameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/output.JoinGameResponse'
        "400":
          description: error response
        "500":
          description: error response
      summary: Join Game
      tags:
      - Game
  /game/{game_id}/action:
    post:
      description: Game Action
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create game request
        in: body
        name: ReadyGameRequest
        required: true
        schema:
          $ref: '#/definitions/input.ActionGameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/output.ActionGameResponse'
        "400":
          description: error response
        "500":
          description: error response
      summary: Game Action
      tags:
      - Game
  /game/{game_id}/ready:
    post:
      description: Game Ready
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create game request
        in: body
        name: ReadyGameRequest
        required: true
        schema:
          $ref: '#/definitions/input.ReadyGameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/output.ReadyGameResponse'
        "400":
          description: error response
        "500":
          description: error response
      summary: Game Ready
      tags:
      - Game
  /users:
    post:
      description: Create User
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create user request
        in: body
        name: CreateUser
        required: true
        schema:
          $ref: '#/definitions/input.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/output.CreateUserResponse'
        "400":
          description: error response
        "409":
          description: error response
        "500":
          description: error response
      summary: Create User
      tags:
      - User
  /users/{user_id}:
    delete:
      description: Delete User
      parameters:
      - description: create user request
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/output.DeleteUserResponse'
        "400":
          description: error response
        "409":
          description: error response
        "500":
          description: error response
      summary: Delete User
      tags:
      - User
    get:
      description: Get any User
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create user request
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/output.ReadUserResponse'
        "400":
          description: error response
        "409":
          description: error response
        "500":
          description: error response
      summary: Get User
      tags:
      - User
swagger: "2.0"
